{"ast":null,"code":"var _jsxFileName = \"/home/patterson/workspace/simple_blog/frontend/src/App.js\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.renderItems = () => {\n      const {\n        viewCompleted\n      } = this.state;\n      const newItems = this.state.postList.filter( // Aqui no ternario estou ignorando published_date, o correto é mostrar só os true\n      item => (item.published_date ? false : false) === viewCompleted);\n      return newItems.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-group-item d-flex justify-content-between align-items-center\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `post-title mr-2 ${this.state.viewCompleted ? \"published-post\" : \"\"}`,\n          title: item.text,\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this));\n    };\n\n    this.state = {\n      viewCompleted: false,\n      activeItem: {\n        title: \"\",\n        text: \"\",\n        created_date: \"\",\n        published_date: \"\"\n      },\n      postList: []\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      const res = await fetch('http://localhost:8000/api/all/');\n      const postList = await res.json();\n      this.setState({\n        postList\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-6 col-sm-10 mx-auto p-0\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card p-3\",\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"list-group list-group-flush\",\n              children: this.renderItems()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/patterson/workspace/simple_blog/frontend/src/App.js"],"names":["React","Component","App","constructor","props","renderItems","viewCompleted","state","newItems","postList","filter","item","published_date","map","text","title","id","activeItem","created_date","componentDidMount","res","fetch","json","setState","e","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,MAAMC,GAAN,SAAkBD,SAAlB,CAA4B;AAC1BE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAyBjBC,WAzBiB,GAyBH,MAAM;AAClB,YAAM;AAAEC,QAAAA;AAAF,UAAoB,KAAKC,KAA/B;AAEA,YAAMC,QAAQ,GAAG,KAAKD,KAAL,CAAWE,QAAX,CAAoBC,MAApB,EACf;AACAC,MAAAA,IAAI,IAAI,CAACA,IAAI,CAACC,cAAL,GAAsB,KAAtB,GAA8B,KAA/B,MAA0CN,aAFnC,CAAjB;AAIA,aAAOE,QAAQ,CAACK,GAAT,CAAaF,IAAI,iBACtB;AAEE,QAAA,SAAS,EAAC,mEAFZ;AAAA,+BAIE;AACE,UAAA,SAAS,EAAG,mBACV,KAAKJ,KAAL,CAAWD,aAAX,GAA2B,gBAA3B,GAA8C,EAC/C,EAHH;AAIE,UAAA,KAAK,EAAEK,IAAI,CAACG,IAJd;AAAA,oBAMKH,IAAI,CAACI;AANV;AAAA;AAAA;AAAA;AAAA;AAJF,SACOJ,IAAI,CAACK,EADZ;AAAA;AAAA;AAAA;AAAA,cADK,CAAP;AAeD,KA/CgB;;AAEjB,SAAKT,KAAL,GAAa;AACXD,MAAAA,aAAa,EAAE,KADJ;AAEXW,MAAAA,UAAU,EAAE;AACVF,QAAAA,KAAK,EAAE,EADG;AAEVD,QAAAA,IAAI,EAAE,EAFI;AAGVI,QAAAA,YAAY,EAAE,EAHJ;AAIVN,QAAAA,cAAc,EAAE;AAJN,OAFD;AAQXH,MAAAA,QAAQ,EAAE;AARC,KAAb;AAUD;;AAEwB,QAAjBU,iBAAiB,GAAG;AACtB,QAAI;AACA,YAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,gCAAD,CAAvB;AACA,YAAMZ,QAAQ,GAAG,MAAMW,GAAG,CAACE,IAAJ,EAAvB;AACA,WAAKC,QAAL,CAAc;AACVd,QAAAA;AADU,OAAd;AAGH,KAND,CAME,OAAOe,CAAP,EAAU;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACH;AACJ;;AAyBDG,EAAAA,MAAM,GAAG;AACP,wBACE;AAAM,MAAA,SAAS,EAAC,SAAhB;AAAA,6BACA;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,gCAAf;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,UAAf;AAAA,mCACE;AAAI,cAAA,SAAS,EAAC,6BAAd;AAAA,wBACG,KAAKtB,WAAL;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YADF;AAaD;;AAhEuB;;AAmE5B,eAAeH,GAAf","sourcesContent":["import React, { Component } from \"react\"\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      viewCompleted: false,\n      activeItem: {\n        title: \"\",\n        text: \"\",\n        created_date: \"\",\n        published_date: \"\",\n      },\n      postList: []\n      };\n  }\n\n    async componentDidMount() {\n        try {\n            const res = await fetch('http://localhost:8000/api/all/');\n            const postList = await res.json();\n            this.setState({\n                postList\n            });\n        } catch (e) {\n            console.log(e);\n        }\n    }\n    renderItems = () => {\n      const { viewCompleted } = this.state;\n\n      const newItems = this.state.postList.filter(\n        // Aqui no ternario estou ignorando published_date, o correto é mostrar só os true\n        item => (item.published_date ? false : false) === viewCompleted\n      );\n      return newItems.map(item => (\n        <li\n          key={item.id}\n          className=\"list-group-item d-flex justify-content-between align-items-center\"\n        >\n          <span\n            className={`post-title mr-2 ${\n              this.state.viewCompleted ? \"published-post\" : \"\"\n            }`}\n            title={item.text}\n            >\n              {item.title}\n            </span>\n        </li>\n      ));\n    };\n\n    render() {\n      return (\n        <main className=\"content\">\n        <div className=\"row\">\n          <div className=\"col-md-6 col-sm-10 mx-auto p-0\">\n            <div className=\"card p-3\">\n              <ul className=\"list-group list-group-flush\">\n                {this.renderItems()}\n              </ul>\n            </div>\n          </div>\n        </div>\n      </main>\n      )\n    }\n  }\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}