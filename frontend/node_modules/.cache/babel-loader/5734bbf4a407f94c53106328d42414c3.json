{"ast":null,"code":"var _jsxFileName = \"/home/patterson/workspace/simple_blog/frontend/src/App.js\";\nimport React, { Component } from \"react\";\nimport Modal from \"./components/Modal\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = () => {\n      this.setState({\n        modal: !this.state.modal\n      });\n    };\n\n    this.handleSubmit = item => {\n      this.toggle();\n\n      if (item.id) {\n        axios.put(`http://localhost:8000/api/posts/${item.id}/`, item);\n        return;\n      }\n\n      axios.post(\"http://localhost:8000/api/posts/\", item);\n    };\n\n    this.createItem = () => {\n      const item = {\n        title: \"\",\n        text: \"\",\n        completed: false\n      };\n      this.setState({\n        activeItem: item,\n        modal: !this.state.modal\n      });\n    };\n\n    this.displayCompleted = status => {\n      if (status) {\n        return this.setState({\n          viewCompleted: true\n        });\n      }\n\n      return this.setState({\n        viewCompleted: false\n      });\n    };\n\n    this.renderTabList = () => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"my-5 tab-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.displayCompleted(true),\n          className: this.state.viewCompleted ? \"active\" : \"\",\n          children: \"Complete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.displayCompleted(false),\n          className: this.state.viewCompleted ? \"\" : \"active\",\n          children: \"Incomplete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this);\n    };\n\n    this.renderItems = () => {\n      const {\n        viewCompleted\n      } = this.state;\n      const newItems = this.state.postList.filter( // Aqui no ternario estou ignorando published_date, o correto é mostrar só os true\n      item => (item.published_date ? false : false) === viewCompleted);\n      return newItems.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-group-item d-flex justify-content-between align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: `post-title mr-2 ${this.state.viewCompleted ? \"published-post\" : \"\"}`,\n          title: item.text,\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-secondary mr-2\",\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-danger\",\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this));\n    };\n\n    this.state = {\n      viewCompleted: false,\n      activeItem: {\n        title: \"\",\n        text: \"\",\n        created_date: \"\",\n        published_date: \"\"\n      },\n      postList: []\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      const res = await fetch('http://localhost:8000/api/posts/');\n      const postList = await res.json();\n      this.setState({\n        postList\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-white text-uppercase text-center my-4\",\n        children: \"Todo App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-6 col-sm-10 mx-auto p-0\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card p-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: this.createItem,\n                className: \"btn btn-success\",\n                children: \"Create new post\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 15\n            }, this), this.renderTabList(), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"list-group list-group-flush\",\n              children: this.renderItems()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), this.state.modal ? /*#__PURE__*/_jsxDEV(Modal, {\n        activeItem: this.state.activeItem,\n        toggle: this.toggle,\n        onSave: this.handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/patterson/workspace/simple_blog/frontend/src/App.js"],"names":["React","Component","Modal","axios","App","constructor","props","toggle","setState","modal","state","handleSubmit","item","id","put","post","createItem","title","text","completed","activeItem","displayCompleted","status","viewCompleted","renderTabList","renderItems","newItems","postList","filter","published_date","map","created_date","componentDidMount","res","fetch","json","e","console","log","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Modal from \"./components/Modal\";\nimport axios from \"axios\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      viewCompleted: false,\n      activeItem: {\n        title: \"\",\n        text: \"\",\n        created_date: \"\",\n        published_date: \"\",\n      },\n      postList: []\n      };\n  }\n\n    async componentDidMount() {\n        try {\n            const res = await fetch('http://localhost:8000/api/posts/');\n            const postList = await res.json();\n            this.setState({\n                postList\n            });\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    toggle = () => {\n      this.setState({ modal: !this.state.modal });\n    };\n\n    //Responsible for saving the task\n    handleSubmit = item => {\n      this.toggle();\n      if (item.id) {\n        axios\n          .put(`http://localhost:8000/api/posts/${item.id}/`, item)\n        return;\n      }\n      axios\n        .post(\"http://localhost:8000/api/posts/\", item)\n    };\n\n    createItem = () => {\n      const item = {title: \"\", text: \"\", completed: false };\n      this.setState({ activeItem: item, modal: !this.state.modal });\n    };\n\n    displayCompleted = status => {\n      if (status) {\n        return this.setState({ viewCompleted: true});\n      }\n      return this.setState({ viewCompleted: false});\n    };\n    renderTabList = () => {\n      return (\n        <div className=\"my-5 tab-list\">\n          <button\n            onClick={() => this.displayCompleted(true)}\n            className={this.state.viewCompleted ? \"active\" : \"\"}\n          >\n            Complete\n          </button>\n          <button\n            onClick={() => this.displayCompleted(false)}\n            className={this.state.viewCompleted ? \"\" : \"active\"}\n          >\n            Incomplete\n          </button>\n        </div>\n      );\n    };\n\n    renderItems = () => {\n      const { viewCompleted } = this.state;\n\n      const newItems = this.state.postList.filter(\n        // Aqui no ternario estou ignorando published_date, o correto é mostrar só os true\n        item => (item.published_date ? false : false) === viewCompleted\n      );\n      return newItems.map(item => (\n        <li\n          key={item.id}\n          className=\"list-group-item d-flex justify-content-between align-items-center\"\n        >\n          <span\n            className={`post-title mr-2 ${\n              this.state.viewCompleted ? \"published-post\" : \"\"\n            }`}\n            title={item.text}\n            >\n              {item.title}\n          </span>\n          <span>\n              <button\n                className=\"btn btn-secondary mr-2\"\n              >\n                Edit\n              </button>\n              <button\n                className=\"btn btn-danger\"\n              >\n                Delete\n              </button>\n          </span>\n        </li>\n      ));\n    };\n\n    render() {\n      return (\n        <main className=\"content\">\n        <h1 className=\"text-white text-uppercase text-center my-4\">Todo App</h1>\n        <div className=\"row\">\n          <div className=\"col-md-6 col-sm-10 mx-auto p-0\">\n            <div className=\"card p-3\">\n              <div className=\"\">\n                <button onClick={this.createItem} className=\"btn btn-success\">Create new post</button>\n              </div>\n              {this.renderTabList()}\n              <ul className=\"list-group list-group-flush\">\n                {this.renderItems()}\n              </ul>\n            </div>\n          </div>\n        </div>\n        {this.state.modal ? (\n          <Modal\n            activeItem={this.state.activeItem}\n            toggle={this.toggle}\n            onSave={this.handleSubmit}\n          />\n        ): null}\n      </main>\n      )\n    }\n  }\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}